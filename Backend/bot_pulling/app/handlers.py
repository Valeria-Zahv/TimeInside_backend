from aiogram import Dispatcher
from aiogram.types import (
    Message, KeyboardButton, ReplyKeyboardMarkup,
    WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
)
from config import load_config

config = load_config()
WEBAPP_URL = config.WEBAPP_URL

def register_handlers(dp: Dispatcher):
    @dp.message()
    async def handle_all(message: Message):
        if message.text == "/start":
            # Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å WebApp
            reply_kb = ReplyKeyboardMarkup(
                keyboard=[[
                    KeyboardButton(
                        text="–û—Ç–∫—Ä—ã—Ç—å WebApp (Reply)",
                        web_app=WebAppInfo(url=WEBAPP_URL)
                    )
                ]],
                resize_keyboard=True
            )

            # Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å WebApp
            inline_kb = InlineKeyboardMarkup(
                inline_keyboard=[[
                    InlineKeyboardButton(
                        text="–û—Ç–∫—Ä—ã—Ç—å WebApp (Inline)",
                        web_app=WebAppInfo(url=WEBAPP_URL)
                    )
                ]]
            )

            await message.answer("–û—Ç–∫—Ä—ã–≤–∞–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É", reply_markup=reply_kb)
            await message.answer("–ò–ª–∏ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É üëá", reply_markup=inline_kb)

        elif message.web_app_data:
            await message.answer(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")
